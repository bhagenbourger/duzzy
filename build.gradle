plugins {
    id 'application'
    id 'org.graalvm.buildtools.native' version '0.10.3'
    id 'com.github.spotbugs' version '6.0.27'
    id 'jacoco'
    id 'jacoco-report-aggregation'
}

application {
    mainClass = "io.duzzy.cli.App"
}

jar.enabled = false
build.enabled = false

graalvmNative {
    binaries.configureEach {
        resources.autodetect()
    }
    toolchainDetection = false
    testSupport = true
}

tasks.named('check') {
    dependsOn tasks.named('testCodeCoverageReport', JacocoReport)
}

ext {
    avro = "1.12.0"
    jackson = "2.18.0"
    log4j2 = "2.24.3"
}

dependencies {
    implementation project(":cli")
    implementation project(":plugin-avro")
    implementation project(":plugin-parquet")
    implementation project(":plugin-hdfs")
    implementation project(":plugin-kafka")
    implementation project(":plugin-duckdb")
    implementation project(":plugin-postgresql")
}

allprojects {
    apply plugin: 'java'
    apply plugin: 'checkstyle'
    apply plugin: 'com.github.spotbugs'
    apply plugin: 'jacoco'

    group = 'io.duzzy'
    version = '0.0.0-SNAPSHOT'

    java {
        sourceCompatibility = JavaVersion.VERSION_21
        targetCompatibility = JavaVersion.VERSION_21
    }

    checkstyle {
        toolVersion = "10.21.0"
        ignoreFailures = false
        maxWarnings = 0
    }

    spotbugs {
        toolVersion = '4.8.6'
        excludeFilter = file('../config/spotbugs/spotbugs-exclude.xml')
    }

    test {
        finalizedBy jacocoTestReport
    }

    repositories {
        mavenCentral()
    }
}

subprojects {
    apply plugin: 'maven-publish'

    dependencies {
        implementation 'org.slf4j:slf4j-api:2.0.16'
        implementation "org.apache.logging.log4j:log4j-api:$log4j2"
        implementation "org.apache.logging.log4j:log4j-core:$log4j2"
        implementation "org.apache.logging.log4j:log4j-slf4j2-impl:$log4j2"


        testImplementation project(":tests")
        testImplementation platform('org.junit:junit-bom:5.10.0')
        testImplementation 'org.junit.jupiter:junit-jupiter'
        testImplementation 'org.assertj:assertj-core:3.26.3'
        testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    }

    test {
        useJUnitPlatform()
    }

    publishing {
        publications {
            if (!project.name.equals('cli') && !project.name.equals('tests')) {
                maven(MavenPublication) {
                    pom {
                        name = 'Duzzy'
                        description = 'Give me your schema, I\'ll give you your test data.'
                        url = 'https://github.com/bhagenbourger/duzzy'
                        licenses {
                            license {
                                name = 'The Apache License, Version 2.0'
                                url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                            }
                        }
                        developers {
                            developer {
                                id = 'bhagenbourger'
                                name = 'Beno√Æt Hagenbourger'
                                email = 'benoit@hagenbourger.fr'
                            }
                        }
                        scm {
                            connection = 'scm:git:git://github.com/bhagenbourger/duzzy.git'
                            developerConnection = 'scm:git:ssh://github.com/bhagenbourger/duzzy.git'
                            url = 'https://github.com/bhagenbourger/duzzy'
                        }
                    }
                }
            }
        }
        repositories {
            maven {
                name = 'GitHubPackages'
                url = "https://maven.pkg.github.com/bhagenbourger/duzzy${version.endsWith('SNAPSHOT') ? '/snapshots' : ''}"
                credentials {
                    username = System.getenv("GITHUB_ACTOR")
                    password = System.getenv("GITHUB_TOKEN")
                }
            }
        }
    }
}