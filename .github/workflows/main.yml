name: Duzzy check

on:
  push:
    branches:
      - main
      - releases/*
    tags:
      - v*
  pull_request:
    branches:
      - main
      - releases/*

permissions:
  checks: write
  packages: write
  contents: write

jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'adopt'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Install Duckdb
        shell: bash
        run: pip install duckdb --upgrade

      - name: Check code
        run: ./gradlew check

      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v5
        if: success() || failure()
        with:
          report_paths: '**/build/test-results/test/TEST-*.xml'

      - name: JaCoCo Code Coverage Report
        id: jacoco_reporter
        uses: PavanMudigonda/jacoco-reporter@v5.0
        with:
          coverage_results_path: tests/build/reports/jacoco/testCodeCoverageReport/testCodeCoverageReport.xml
          coverage_report_name: Coverage
          coverage_report_title: JaCoCo
          github_token: ${{ secrets.GITHUB_TOKEN }}
          minimum_coverage: 85
          fail_below_threshold: true
          publish_only_summary: false

      - name: Add Jacocoo report to workflow run summary
        run: |
          echo "| Outcome | Value |" >> $GITHUB_STEP_SUMMARY
          echo "| --- | --- |" >> $GITHUB_STEP_SUMMARY
          echo "| Code Coverage % | ${{ steps.jacoco_reporter.outputs.coverage_percentage }} |" >> $GITHUB_STEP_SUMMARY
          echo "| :heavy_check_mark: Number of Lines Covered | ${{ steps.jacoco_reporter.outputs.covered_lines }} |" >> $GITHUB_STEP_SUMMARY
          echo "| :x: Number of Lines Missed | ${{ steps.jacoco_reporter.outputs.missed_lines }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Total Number of Lines | ${{ steps.jacoco_reporter.outputs.total_lines }} |" >> $GITHUB_STEP_SUMMARY

      - name: Upload reports
        uses: actions/upload-artifact@v4
        with:
          name: reports
          path: "**/build/reports"
          retention-days: 7
  
  build-jvm:
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'adopt'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        
      - name: Publish snapshot jars to the registry
        run: ./gradlew publish
        if: ${{ startsWith(github.ref, 'refs/heads/main') || startsWith(github.ref, 'refs/heads/releases') }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate variable for release
        shell: bash
        if: ${{ startsWith(github.ref, 'refs/tags/v') }}
        run: |
          # Output tag in correct format
          echo "VERSION=${GITHUB_REF_NAME#v}" >> $GITHUB_ENV

      - name: Publish release jars to the registry
        run: ./gradlew publish
        if: ${{ startsWith(github.ref, 'refs/tags/v') }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_VERSION: ${{ env.VERSION }}

      - name: Build release distributions
        run: ./gradlew assemble
        if: ${{ startsWith(github.ref, 'refs/tags/v') }}
        env:
          GITHUB_VERSION: ${{ env.VERSION }}

      - name: Create or update release
        uses: softprops/action-gh-release@v2
        if: ${{ startsWith(github.ref, 'refs/tags/v') }}
        with:
          files: |
            cli-jvm/build/distributions/duzzy-${{ env.VERSION }}.zip
            cli-jvm/build/distributions/duzzy-${{ env.VERSION }}.tar
            plugin-*/build/libs/plugin-*-${{ env.VERSION }}-all.jar
    
  build-native:
    runs-on: ${{ matrix.os }}
    needs: tests
    if: ${{ startsWith(github.ref, 'refs/heads/main') || startsWith(github.ref, 'refs/tags/v') }}
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest, macos-13, windows-latest ]
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
      
      - name: Set up GRAALVM 21
        uses: graalvm/setup-graalvm@v1
        with:
          java-version: '21'     
          distribution: 'graalvm'
          github-token: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Set environment variables (Linux/macOS)
        if: runner.os != 'Windows'
        run: |
          echo "ARTIFACT_PATH=cli-native/build/native/nativeCompile/duzzy" >> $GITHUB_ENV
          echo "ARTIFACT_PATH_RENAMED=cli-native/build/native/nativeCompile/duzzy-${{ env.LOWER_OS }}-${{ env.LOWER_ARCH }}" >> $GITHUB_ENV
          echo "LOWER_OS=$(echo ${{ runner.os }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV
          echo "LOWER_ARCH=$(echo ${{ runner.arch }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV
          echo "NATIVE_EXT=$(echo '')" >> $GITHUB_ENV
      
      - name: Set environment variables (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          echo "ARTIFACT_PATH=cli-native\build\native\nativeCompile\duzzy.exe" | Out-File -FilePath $env:GITHUB_ENV -Append
          echo "ARTIFACT_PATH_RENAMED=cli-native\build\native\nativeCompile\duzzy-${{ env.LOWER_OS }}-${{ env.LOWER_ARCH }}.exe" | Out-File -FilePath $env:GITHUB_ENV -Append
          echo "LOWER_OS=${{ runner.os }}" | ForEach-Object { $_.ToLower() } | Out-File -FilePath $env:GITHUB_ENV -Append
          echo "LOWER_ARCH=${{ runner.arch }}" | ForEach-Object { $_.ToLower() } | Out-File -FilePath $env:GITHUB_ENV -Append
      
      - name: Build native image
        run: ./gradlew nativeCompile
        
      - name: Upload binary
        uses: actions/upload-artifact@v4
        if: ${{ startsWith(github.ref, 'refs/heads/main') }}
        with:
          name: "duzzy-${{ env.LOWER_OS }}-${{ env.LOWER_ARCH }}"
          path: "${{ env.ARTIFACT_PATH }}"
          retention-days: 7
          
      - name: Rename binary for release
        if: ${{ startsWith(github.ref, 'refs/tags/v') }}
        run: |
            mv "${{ env.ARTIFACT_PATH }}" "${{ env.ARTIFACT_PATH_RENAMED }}"
      
      - name: Create or update release
        uses: softprops/action-gh-release@v2
        if: ${{ startsWith(github.ref, 'refs/tags/v') }}
        with:
          files: "${{ env.ARTIFACT_PATH_RENAMED }}"