# Duzzy components

## DuzzyConfig
A `DuzzyConfig` is a yaml file that enables you to specify some configurations for `Duzzy` and composed to:
 - `enricher` : an enricher is a component  that enables field improvement by specifying which `provider` to use for generate data.
 - `sink` : a sink is a component  that enables to specify where and in which format  (via a `serializer`) data are written.

### io.duzzy.core.config.DuzzyConfig ♨️ 🧬  
🔑 Identifier: io.duzzy.core.config.DuzzyConfig  
📋 Description: Duzzy Config enables schema enrichment by specifying column provider, sink or serializer  
📦 Module: io.duzzy.core  
🧬 Native support: true  

💡 Example: 
```
---
enrichers:
  - query_selector: "name=city"
    provider_identifier: "io.duzzy.plugin.provider.random.AlphanumericRandomProvider"
    provider_parameters:
      min_length: 3
      max_length: 20
  - query_selector: "type=INTEGER"
    provider_identifier: "io.duzzy.plugin.provider.random.IntegerRandomProvider"
    provider_parameters:
      min: 1
      max: 9999
sink:
  identifier: "io.duzzy.plugin.sink.LocalFileSink"
  filename: "/tmp/example.xml"
  serializer:
    identifier: "io.duzzy.plugin.serializer.XmlSerializer"
    root_tag: myRootExample
    row_tag: myRowExample
```

## DuzzySchema
A `DuzzySchema` is a yaml file that enables you to specify the schema for generated data.

A `DuzzySchema` is a list of `Field`.

A `Field` is composed of:
 - `name`: the name of the field
 - `type`: the type of the field
 - `nullRate`: the rate of null values (0 means not null)
 - `corruptedRate`: the rate of corrupted values (0 means no corrupted value),  a corrupted value is a value that not match field constraint or field type  (only if sink hasn't schema)
 - `providers`: a list of providers used to generate data for the `Field`

### io.duzzy.core.schema.DuzzySchema ♨️ 🧬  
🔑 Identifier: io.duzzy.core.schema.DuzzySchema  
📋 Description: Duzzy schema is the default input schema in which you can specify whatever you want into the output  
📦 Module: io.duzzy.core  
🧬 Native support: true  

💡 Example: 
```
---
fields:
  - name: stringConstant
    type: STRING
    null_rate: 0.5
    corrupted_rate: 0.5
    providers:
      - identifier: "io.duzzy.plugin.provider.constant.StringConstantProvider"
        value: myConstant
  - name: stringListConstant
    type: STRING
    null_rate: 0.5
    corrupted_rate: 0.5
    providers:
      - identifier: "io.duzzy.plugin.provider.constant.StringListConstantProvider"
        values: [ "one", "two", "three" ]
  - name: stringWeightedListConstant
    type: STRING
    null_rate: 0.5
    corrupted_rate: 0.5
    providers:
      - identifier: "io.duzzy.plugin.provider.constant.StringWeightedListConstantProvider"
        values:
          - value: first
            weight: 1
          - value: second
            weight: 2
          - value: third
            weight: 3
  - name: longIncrement
    type: LONG
    null_rate: 0.5
    corrupted_rate: 0.5
    providers:
      - identifier: "io.duzzy.plugin.provider.increment.LongIncrementProvider"
        start: 100
        step: 10
  - name: integerRandom
    type: INTEGER
    null_rate: 0.5
    corrupted_rate: 0.5
    providers:
      - identifier: "io.duzzy.plugin.provider.random.IntegerRandomProvider"
        min: 50
        max: 100
```

## Parser
A `parser`is a component that parses the input schema and produces a `DuzzySchema` by combining the input schema and duzzy config.

### io.duzzy.plugin.parser.AvroSchemaParser ♨️ 🧬  
🔑 Identifier: io.duzzy.plugin.parser.AvroSchemaParser  
📋 Description: Parse an Avro schema and produce a Duzzy schema  
📦 Module: io.duzzy.plugin-avro  
🧬 Native support: true

### io.duzzy.plugin.parser.DuzzySchemaParser ♨️ 🧬  
🔑 Identifier: io.duzzy.plugin.parser.DuzzySchemaParser  
📋 Description: DuzzySchema parser, it is the default parser, if no parser is specified this parser is used.  
📦 Module: io.duzzy.core  
🧬 Native support: true

### io.duzzy.plugin.parser.SqlParser ♨️ 🧬  
🔑 Identifier: io.duzzy.plugin.parser.SqlParser  
📋 Description: SQL parser: parse SQL schema to DuzzySchema  
📦 Module: io.duzzy.core  
🧬 Native support: true

## Field
A Field is composed of:
- name: the name of the field
- type: the type of the field
- nullRate: the rate of null values (0 means not null)
- corruptedRate: the rate of corrupted values (0 means no corrupted value), a corrupted value is a value that not match field constraint or field type (only if sink hasn't schema)
- providers: a list of providers used to generate data for the Field

### io.duzzy.core.field.Field ♨️ 🧬  
🔑 Identifier: io.duzzy.core.field.Field  
📋 Description: A field representation with a name and a type which manages how the data is generated. Field delegates data generation to the provider.  
📦 Module: io.duzzy.core  
🧬 Native support: true  

⚙️ Parameters: 

| Name | Aliases | Description | Default value |
| --- | --- | --- | --- |
| name |  | The field name, must be a string |  |
| type |  | The field value type, the list of supported types:
BOOLEAN, INTEGER, LONG, FLOAT, DOUBLE, STRING, UUID,
LOCAL_DATE, INSTANT, TIME_MILLIS, TIME_MICROS, TIMESTAMP_MILLIS, TIMESTAMP_MICROS
 |  |
| null_rate | nullRate, null-rate | Rate of null values, between 0.0 and 1.0 | 0.0 |
| corrupted_rate | corruptedRate, corrupted-rate | Rate of corrupted values, between 0.0 and 1.0 | 0.0 |
| providers |  | The providers list used to generate the column value |  |  

💡 Example: 
```
---
- name: stringConstant
  type: STRING
  null_rate: 0.5
  corrupted_rate: 0.5
  providers:
    - identifier: "io.duzzy.plugin.provider.constant.StringConstantProvider"
      value: myConstant
```

## Provider
A provider is a component responsible for generating value. 
Data generated by a provider has always the same type but can be valid or corrupted.

### io.duzzy.plugin.provider.constant.BigDecimalConstantProvider ♨️ 🧬  
🔑 Identifier: io.duzzy.plugin.provider.constant.BigDecimalConstantProvider  
📋 Description: Provide a big decimal constant value  
📦 Module: io.duzzy.core  
🧬 Native support: true  

⚙️ Parameters: 

| Name | Aliases | Description | Default value |
| --- | --- | --- | --- |
| value |  | The constant value, must be a big decimal |  |  

💡 Example: 
```
---
identifier: "io.duzzy.plugin.provider.constant.BigDecimalConstantProvider"
value: 42.4
```

### io.duzzy.plugin.provider.constant.BigIntegerConstantProvider ♨️ 🧬  
🔑 Identifier: io.duzzy.plugin.provider.constant.BigIntegerConstantProvider  
📋 Description: Provide a BigInteger constant value  
📦 Module: io.duzzy.core  
🧬 Native support: true  

⚙️ Parameters: 

| Name | Aliases | Description | Default value |
| --- | --- | --- | --- |
| value |  | The constant value, must be a BigInteger |  |  

💡 Example: 
```
---
identifier: "io.duzzy.plugin.provider.constant.BigIntegerConstantProvider"
value: 123456789012345678901234567890
```

### io.duzzy.plugin.provider.constant.BooleanConstantColumn ♨️ 🧬  
🔑 Identifier: io.duzzy.plugin.provider.constant.BooleanConstantColumn  
📋 Description: Provide a boolean constant value  
📦 Module: io.duzzy.core  
🧬 Native support: true  

⚙️ Parameters: 

| Name | Aliases | Description | Default value |
| --- | --- | --- | --- |
| value |  | The constant value, must be a boolean |  |  

💡 Example: 
```
---
identifier: "io.duzzy.plugin.provider.constant.BooleanConstantColumn"
value: false
```

### io.duzzy.plugin.provider.constant.DoubleConstantProvider ♨️ 🧬  
🔑 Identifier: io.duzzy.plugin.provider.constant.DoubleConstantProvider  
📋 Description: Provide a double constant value  
📦 Module: io.duzzy.core  
🧬 Native support: true  

⚙️ Parameters: 

| Name | Aliases | Description | Default value |
| --- | --- | --- | --- |
| value |  | The constant value, must be a double |  |  

💡 Example: 
```
---
identifier: "io.duzzy.plugin.provider.constant.DoubleConstantProvider"
value: 42.4
```

### io.duzzy.plugin.provider.constant.FloatConstantProvider ♨️ 🧬  
🔑 Identifier: io.duzzy.plugin.provider.constant.FloatConstantProvider  
📋 Description: Provide a float constant value  
📦 Module: io.duzzy.core  
🧬 Native support: true  

⚙️ Parameters: 

| Name | Aliases | Description | Default value |
| --- | --- | --- | --- |
| value |  | The constant value, must be a float |  |  

💡 Example: 
```
---
identifier: "io.duzzy.plugin.provider.constant.FloatConstantProvider"
value: 42.4
```

### io.duzzy.plugin.provider.constant.InstantConstantProvider ♨️ 🧬  
🔑 Identifier: io.duzzy.plugin.provider.constant.InstantConstantProvider  
📋 Description: Provide an Instant constant value  
📦 Module: io.duzzy.core  
🧬 Native support: true  

⚙️ Parameters: 

| Name | Aliases | Description | Default value |
| --- | --- | --- | --- |
| value |  | The constant value, must be an Instant |  |  

💡 Example: 
```
---
identifier: "io.duzzy.plugin.provider.constant.InstantConstantProvider"
value: "2023-01-01T12:00:00Z"
```

### io.duzzy.plugin.provider.constant.IntegerConstantProvider ♨️ 🧬  
🔑 Identifier: io.duzzy.plugin.provider.constant.IntegerConstantProvider  
📋 Description: Provide an integer constant value  
📦 Module: io.duzzy.core  
🧬 Native support: true  

⚙️ Parameters: 

| Name | Aliases | Description | Default value |
| --- | --- | --- | --- |
| value |  | The constant value, must be an integer |  |  

💡 Example: 
```
---
identifier: "io.duzzy.plugin.provider.constant.IntegerConstantProvider"
value: 42
```

### io.duzzy.plugin.provider.constant.LocalDateConstantProvider ♨️ 🧬  
🔑 Identifier: io.duzzy.plugin.provider.constant.LocalDateConstantProvider  
📋 Description: Provide a LocalDate constant value  
📦 Module: io.duzzy.core  
🧬 Native support: true  

⚙️ Parameters: 

| Name | Aliases | Description | Default value |
| --- | --- | --- | --- |
| value |  | The constant value, must be a LocalDate |  |  

💡 Example: 
```
---
identifier: "io.duzzy.plugin.provider.constant.LocalDateConstantProvider"
value: "2023-01-01"
```

### io.duzzy.plugin.provider.constant.LocalDateTimeConstantProvider ♨️ 🧬  
🔑 Identifier: io.duzzy.plugin.provider.constant.LocalDateTimeConstantProvider  
📋 Description: Provide a LocalDateTime constant value  
📦 Module: io.duzzy.core  
🧬 Native support: true  

⚙️ Parameters: 

| Name | Aliases | Description | Default value |
| --- | --- | --- | --- |
| value |  | The constant value, must be a LocalDateTime |  |  

💡 Example: 
```
---
identifier: "io.duzzy.plugin.provider.constant.LocalDateTimeConstantProvider"
value: "2023-01-01T12:00:00"
```

### io.duzzy.plugin.provider.constant.LocalTimeConstantProvider ♨️ 🧬  
🔑 Identifier: io.duzzy.plugin.provider.constant.LocalTimeConstantProvider  
📋 Description: Provide a LocalTime constant value  
📦 Module: io.duzzy.core  
🧬 Native support: true  

⚙️ Parameters: 

| Name | Aliases | Description | Default value |
| --- | --- | --- | --- |
| value |  | The constant value, must be a LocalTime |  |  

💡 Example: 
```
---
identifier: "io.duzzy.plugin.provider.constant.LocalTimeConstantProvider"
value: "12:30:00"
```

### io.duzzy.plugin.provider.constant.LongConstantProvider ♨️ 🧬  
🔑 Identifier: io.duzzy.plugin.provider.constant.LongConstantProvider  
📋 Description: Provide a long constant value  
📦 Module: io.duzzy.core  
🧬 Native support: true  

⚙️ Parameters: 

| Name | Aliases | Description | Default value |
| --- | --- | --- | --- |
| value |  | The constant value, must be a long |  |  

💡 Example: 
```
---
identifier: "io.duzzy.plugin.provider.constant.LongConstantProvider"
value: 42
```

### io.duzzy.plugin.provider.constant.ShortConstantProvider ♨️ 🧬  
🔑 Identifier: io.duzzy.plugin.provider.constant.ShortConstantProvider  
📋 Description: Provide a Short constant value  
📦 Module: io.duzzy.core  
🧬 Native support: true  

⚙️ Parameters: 

| Name | Aliases | Description | Default value |
| --- | --- | --- | --- |
| value |  | The constant value, must be a Short |  |  

💡 Example: 
```
---
identifier: "io.duzzy.plugin.provider.constant.ShortConstantProvider"
value: 123
```

### io.duzzy.plugin.provider.constant.SqlDateConstantProvider ♨️ 🧬  
🔑 Identifier: io.duzzy.plugin.provider.constant.SqlDateConstantProvider  
📋 Description: Provide a java.sql.Date constant value  
📦 Module: io.duzzy.core  
🧬 Native support: true  

⚙️ Parameters: 

| Name | Aliases | Description | Default value |
| --- | --- | --- | --- |
| value |  | The constant value, must be a java.sql.Date |  |  

💡 Example: 
```
---
identifier: "io.duzzy.plugin.provider.constant.SqlDateConstantProvider"
value: "2023-01-01"
```

### io.duzzy.plugin.provider.constant.SqlTimeConstantProvider ♨️ 🧬  
🔑 Identifier: io.duzzy.plugin.provider.constant.SqlTimeConstantProvider  
📋 Description: Provide a java.sql.Time constant value  
📦 Module: io.duzzy.core  
🧬 Native support: true  

⚙️ Parameters: 

| Name | Aliases | Description | Default value |
| --- | --- | --- | --- |
| value |  | The constant value, must be a java.sql.Time |  |  

💡 Example: 
```
---
identifier: "io.duzzy.plugin.provider.constant.SqlTimeConstantProvider"
value: "12:30:00"
```

### io.duzzy.plugin.provider.constant.StringConstantProvider ♨️ 🧬  
🔑 Identifier: io.duzzy.plugin.provider.constant.StringConstantProvider  
📋 Description: Provide a string constant value  
📦 Module: io.duzzy.core  
🧬 Native support: true  

⚙️ Parameters: 

| Name | Aliases | Description | Default value |
| --- | --- | --- | --- |
| value |  | The constant value, must be a string |  |  

💡 Example: 
```
---
identifier: "io.duzzy.plugin.provider.constant.StringConstantProvider"
value: "constant"
```

### io.duzzy.plugin.provider.constant.StringListConstantProvider ♨️ 🧬  
🔑 Identifier: io.duzzy.plugin.provider.constant.StringListConstantProvider  
📋 Description: Provide a list of string constant values  
📦 Module: io.duzzy.core  
🧬 Native support: true  

⚙️ Parameters: 

| Name | Aliases | Description | Default value |
| --- | --- | --- | --- |
| values |  | The constant values, must be a list of strings |  |  

💡 Example: 
```
---
identifier: "io.duzzy.plugin.provider.constant.StringListConstantProvider"
values:
  - "constant1"
  - "constant2"
```

### io.duzzy.plugin.provider.constant.StringWeightedListConstantProvider ♨️ 🧬  
🔑 Identifier: io.duzzy.plugin.provider.constant.StringWeightedListConstantProvider  
📋 Description: Provide a weighted list of string constant values  
📦 Module: io.duzzy.core  
🧬 Native support: true  

⚙️ Parameters: 

| Name | Aliases | Description | Default value |
| --- | --- | --- | --- |
| values |  | The constant values, must be a list of weighted strings |  |  

💡 Example: 
```
---
identifier: "io.duzzy.plugin.provider.constant.StringWeightedListConstantProvider"
values:
  - value: "one"
    weight: 1
  - value: "two"
    weight: 3
  - value: "three"
    weight: 2
```

### io.duzzy.plugin.provider.increment.BigDecimalIncrementProvider ♨️ 🧬  
🔑 Identifier: io.duzzy.plugin.provider.increment.BigDecimalIncrementProvider  
📋 Description: Provide a big decimal value that increments by a step  
📦 Module: io.duzzy.core  
🧬 Native support: true  

⚙️ Parameters: 

| Name | Aliases | Description | Default value |
| --- | --- | --- | --- |
| start |  | The starting value, defaults to 0 | 0 |
| step |  | The step value, defaults to 1 | 1 |  

💡 Example: 
```
---
identifier: "io.duzzy.plugin.provider.increment.BigDecimalIncrementProvider"
start: 10.5
step: 2.5
```

### io.duzzy.plugin.provider.increment.BigIntegerIncrementProvider ♨️ 🧬  
🔑 Identifier: io.duzzy.plugin.provider.increment.BigIntegerIncrementProvider  
📋 Description: Provide a big integer value that increments by a step  
📦 Module: io.duzzy.core  
🧬 Native support: true  

⚙️ Parameters: 

| Name | Aliases | Description | Default value |
| --- | --- | --- | --- |
| start |  | The starting value, defaults to 0 | 0 |
| step |  | The step value, defaults to 1 | 1 |  

💡 Example: 
```
---
identifier: "io.duzzy.plugin.provider.increment.BigIntegerIncrementProvider"
start: 10
step: 2
```

### io.duzzy.plugin.provider.increment.DoubleIncrementProvider ♨️ 🧬  
🔑 Identifier: io.duzzy.plugin.provider.increment.DoubleIncrementProvider  
📋 Description: Provide a double value that increments by a step  
📦 Module: io.duzzy.core  
🧬 Native support: true  

⚙️ Parameters: 

| Name | Aliases | Description | Default value |
| --- | --- | --- | --- |
| start |  | The starting value, must be a double |  |
| step |  | The step value, must be a double |  |  

💡 Example: 
```
---
identifier: "io.duzzy.plugin.provider.increment.DoubleIncrementProvider"
start: 0.0
step: 0.1
```

### io.duzzy.plugin.provider.increment.FloatIncrementProvider ♨️ 🧬  
🔑 Identifier: io.duzzy.plugin.provider.increment.FloatIncrementProvider  
📋 Description: Provide a float value that increments by a step  
📦 Module: io.duzzy.core  
🧬 Native support: true  

⚙️ Parameters: 

| Name | Aliases | Description | Default value |
| --- | --- | --- | --- |
| start |  | The starting value, defaults to 0 |  |
| step |  | The step value, defaults to 0.1 |  |  

💡 Example: 
```
---
identifier: "io.duzzy.plugin.provider.increment.FloatIncrementProvider"
start: 0.0
step: 0.1
```

### io.duzzy.plugin.provider.increment.InstantIncrementProvider ♨️ 🧬  
🔑 Identifier: io.duzzy.plugin.provider.increment.InstantIncrementProvider  
📋 Description: Provide an instant value that increments by a step  
📦 Module: io.duzzy.core  
🧬 Native support: true  

⚙️ Parameters: 

| Name | Aliases | Description | Default value |
| --- | --- | --- | --- |
| start |  | The starting value, defaults to current instant | now(UTC) |
| step |  | The step value, defaults to 1 | 1 |
| unit |  | The unit of increment (SECONDS, MINUTES, HOURS, DAYS, MONTHS, YEARS), defaults to SECONDS | SECONDS |  

💡 Example: 
```
---
identifier: "io.duzzy.plugin.provider.increment.InstantIncrementProvider"
start: "2023-01-01T00:00:00Z"
step: 1
unit: DAYS
```

### io.duzzy.plugin.provider.increment.IntegerIncrementProvider ♨️ 🧬  
🔑 Identifier: io.duzzy.plugin.provider.increment.IntegerIncrementProvider  
📋 Description: Provide an integer value that increments by a step  
📦 Module: io.duzzy.core  
🧬 Native support: true  

⚙️ Parameters: 

| Name | Aliases | Description | Default value |
| --- | --- | --- | --- |
| start |  | The starting value, defaults to 0 |  |
| step |  | The step value, defaults to 1 |  |  

💡 Example: 
```
---
identifier: "io.duzzy.plugin.provider.increment.IntegerIncrementProvider"
start: 0
step: 2
```

### io.duzzy.plugin.provider.increment.LocalDateIncrementProvider ♨️ 🧬  
🔑 Identifier: io.duzzy.plugin.provider.increment.LocalDateIncrementProvider  
📋 Description: Provide a local date value that increments by a step  
📦 Module: io.duzzy.core  
🧬 Native support: true  

⚙️ Parameters: 

| Name | Aliases | Description | Default value |
| --- | --- | --- | --- |
| start |  | The starting value, defaults to current date | now(UTC) |
| step |  | The step value, defaults to 1 | 1 |
| unit |  | The unit of increment (DAYS, WEEKS, MONTHS, YEARS), defaults to DAYS | DAYS |  

💡 Example: 
```
---
identifier: "io.duzzy.plugin.provider.increment.LocalDateIncrementProvider"
start: "2023-01-01"
step: 1
unit: DAYS
```

### io.duzzy.plugin.provider.increment.LocalDateTimeIncrementProvider ♨️ 🧬  
🔑 Identifier: io.duzzy.plugin.provider.increment.LocalDateTimeIncrementProvider  
📋 Description: Provide a local date-time value that increments by a step  
📦 Module: io.duzzy.core  
🧬 Native support: true  

⚙️ Parameters: 

| Name | Aliases | Description | Default value |
| --- | --- | --- | --- |
| start |  | The starting value, defaults to current local date-time | now() |
| step |  | The step value, defaults to 1 | 1 |
| unit |  | The unit of increment (SECONDS, MINUTES, HOURS, DAYS, MONTHS, YEARS), defaults to SECONDS | SECONDS |  

💡 Example: 
```
---
identifier: "io.duzzy.plugin.provider.increment.LocalDateTimeIncrementProvider"
start: "2023-01-01T00:00:00"
step: 1
unit: DAYS
```

### io.duzzy.plugin.provider.increment.LocalTimeIncrementProvider ♨️ 🧬  
🔑 Identifier: io.duzzy.plugin.provider.increment.LocalTimeIncrementProvider  
📋 Description: Provide a local time value that increments by a step  
📦 Module: io.duzzy.core  
🧬 Native support: true  

⚙️ Parameters: 

| Name | Aliases | Description | Default value |
| --- | --- | --- | --- |
| start |  | The starting value, defaults to current local time | now() |
| step |  | The step value, defaults to 1 | 1 |
| unit |  | The unit of increment (SECONDS, MINUTES, HOURS), defaults to SECONDS | SECONDS |  

💡 Example: 
```
---
identifier: "io.duzzy.plugin.provider.increment.LocalTimeIncrementProvider"
start: "00:00:00"
step: 1
unit: HOURS
```

### io.duzzy.plugin.provider.increment.LongIncrementProvider ♨️ 🧬  
🔑 Identifier: io.duzzy.plugin.provider.increment.LongIncrementProvider  
📋 Description: Provide a long value that increments by a step  
📦 Module: io.duzzy.core  
🧬 Native support: true  

⚙️ Parameters: 

| Name | Aliases | Description | Default value |
| --- | --- | --- | --- |
| start |  | The starting value, defaults to 0 |  |
| step |  | The step value, defaults to 1 |  |  

💡 Example: 
```
---
identifier: "io.duzzy.plugin.provider.increment.LongIncrementProvider"
start: 0
step: 2
```

### io.duzzy.plugin.provider.increment.ShortIncrementProvider ♨️ 🧬  
🔑 Identifier: io.duzzy.plugin.provider.increment.ShortIncrementProvider  
📋 Description: Provide a short value that increments by a step  
📦 Module: io.duzzy.core  
🧬 Native support: true  

⚙️ Parameters: 

| Name | Aliases | Description | Default value |
| --- | --- | --- | --- |
| start |  | The starting value, defaults to 0 | 0 |
| step |  | The step value, defaults to 1 | 1 |  

💡 Example: 
```
---
identifier: "io.duzzy.plugin.provider.increment.ShortIncrementProvider"
start: 10
step: 2
```

### io.duzzy.plugin.provider.increment.SqlDateIncrementProvider ♨️ 🧬  
🔑 Identifier: io.duzzy.plugin.provider.increment.SqlDateIncrementProvider  
📋 Description: Provide a sql date value that increments by a step  
📦 Module: io.duzzy.core  
🧬 Native support: true  

⚙️ Parameters: 

| Name | Aliases | Description | Default value |
| --- | --- | --- | --- |
| start |  | The starting value, defaults to current date | now(UTC) |
| step |  | The step value, defaults to 1 | 1 |
| unit |  | The unit of increment (DAYS, WEEKS, MONTHS, YEARS), defaults to DAYS | DAYS |  

💡 Example: 
```
---
identifier: "io.duzzy.plugin.provider.increment.SqlDateIncrementProvider"
start: "2023-01-01"
step: 1
unit: DAYS
```

### io.duzzy.plugin.provider.increment.SqlTimeIncrementProvider ♨️ 🧬  
🔑 Identifier: io.duzzy.plugin.provider.increment.SqlTimeIncrementProvider  
📋 Description: Provide a sql time value that increments by a step  
📦 Module: io.duzzy.core  
🧬 Native support: true  

⚙️ Parameters: 

| Name | Aliases | Description | Default value |
| --- | --- | --- | --- |
| start |  | The starting value, defaults to current local time | now(UTC) |
| step |  | The step value, defaults to 1 | 1 |
| unit |  | The unit of increment (SECONDS, MINUTES, HOURS), defaults to SECONDS | SECONDS |  

💡 Example: 
```
---
identifier: "io.duzzy.plugin.provider.increment.SqlTimeIncrementProvider"
start: "00:00:00"
step: 1
unit: HOURS
```

### io.duzzy.plugin.provider.random.AlphanumericRandomProvider ♨️ 🧬  
🔑 Identifier: io.duzzy.plugin.provider.random.AlphanumericRandomProvider  
📋 Description: Provide a random alphanumeric value  
📦 Module: io.duzzy.core  
🧬 Native support: true  

⚙️ Parameters: 

| Name | Aliases | Description | Default value |
| --- | --- | --- | --- |
| min_length | minLength, min-length | The minimum length of the generated value |  |
| max_length | maxLength, max-length | The maximum length of the generated value |  |  

💡 Example: 
```
---
identifier: "io.duzzy.plugin.provider.random.AlphanumericRandomProvider"
min_length: 10
max_length: 15
```

### io.duzzy.plugin.provider.random.BigDecimalRandomProvider ♨️ 🧬  
🔑 Identifier: io.duzzy.plugin.provider.random.BigDecimalRandomProvider  
📋 Description: Provide a random big decimal value  
📦 Module: io.duzzy.core  
🧬 Native support: true  

⚙️ Parameters: 

| Name | Aliases | Description | Default value |
| --- | --- | --- | --- |
| min |  | The minimum value, must be a big decimal, inclusive | BigDecimal.valueOf(Double.MIN_VALUE) |
| max |  | The maximum value, must be a big decimal, exclusive | BigDecimal.valueOf(Double.MAX_VALUE) |  

💡 Example: 
```
---
identifier: "io.duzzy.plugin.provider.random.BigDecimalRandomProvider"
min: 0.0
max: 1.0
```

### io.duzzy.plugin.provider.random.BigIntegerRandomProvider ♨️ 🧬  
🔑 Identifier: io.duzzy.plugin.provider.random.BigIntegerRandomProvider  
📋 Description: Provide a random big integer value  
📦 Module: io.duzzy.core  
🧬 Native support: true  

⚙️ Parameters: 

| Name | Aliases | Description | Default value |
| --- | --- | --- | --- |
| min |  | The minimum value, must be a big integer, inclusive | BigInteger.valueOf(Long.MIN_VALUE) |
| max |  | The maximum value, must be a big integer, exclusive | BigInteger.valueOf(Long.MAX_VALUE) |  

💡 Example: 
```
---
identifier: "io.duzzy.plugin.provider.random.BigIntegerRandomProvider"
min: 0
max: 100
```

### io.duzzy.plugin.provider.random.BooleanRandomProvider ♨️ 🧬  
🔑 Identifier: io.duzzy.plugin.provider.random.BooleanRandomProvider  
📋 Description: Provide a random boolean value  
📦 Module: io.duzzy.core  
🧬 Native support: true  

💡 Example: 
```
---
identifier: "io.duzzy.plugin.provider.random.BooleanRandomProvider"
```

### io.duzzy.plugin.provider.random.DoubleRandomProvider ♨️ 🧬  
🔑 Identifier: io.duzzy.plugin.provider.random.DoubleRandomProvider  
📋 Description: Provide a random double value  
📦 Module: io.duzzy.core  
🧬 Native support: true  

⚙️ Parameters: 

| Name | Aliases | Description | Default value |
| --- | --- | --- | --- |
| min |  | The minimum value, must be a double, inclusive |  |
| max |  | The maximum value, must be a double, exclusive |  |  

💡 Example: 
```
---
identifier: "io.duzzy.plugin.provider.random.DoubleRandomProvider"
min: 0.0
max: 1.0
```

### io.duzzy.plugin.provider.random.FloatRandomProvider ♨️ 🧬  
🔑 Identifier: io.duzzy.plugin.provider.random.FloatRandomProvider  
📋 Description: Provide a random float value  
📦 Module: io.duzzy.core  
🧬 Native support: true  

⚙️ Parameters: 

| Name | Aliases | Description | Default value |
| --- | --- | --- | --- |
| min |  | The minimum value, must be a float, inclusive |  |
| max |  | The maximum value, must be a float, exclusive |  |  

💡 Example: 
```
---
identifier: "io.duzzy.plugin.provider.random.FloatRandomProvider"
min: 0.0
max: 1.0
```

### io.duzzy.plugin.provider.random.InstantRandomProvider ♨️ 🧬  
🔑 Identifier: io.duzzy.plugin.provider.random.InstantRandomProvider  
📋 Description: Provide a random instant value  
📦 Module: io.duzzy.core  
🧬 Native support: true  

⚙️ Parameters: 

| Name | Aliases | Description | Default value |
| --- | --- | --- | --- |
| min |  | The minimum instant value, must be a string that represents a valid instant, inclusive |  |
| max |  | The maximum instant value, must be a string that represents a valid instant, exclusive |  |  

💡 Example: 
```
---
identifier: "io.duzzy.plugin.provider.random.InstantRandomProvider"
min: "2020-01-01T00:00:00Z"
max: "2021-01-01T00:00:00Z"
```

### io.duzzy.plugin.provider.random.IntegerRandomProvider ♨️ 🧬  
🔑 Identifier: io.duzzy.plugin.provider.random.IntegerRandomProvider  
📋 Description: Provide a random integer value  
📦 Module: io.duzzy.core  
🧬 Native support: true  

⚙️ Parameters: 

| Name | Aliases | Description | Default value |
| --- | --- | --- | --- |
| min |  | The minimum value, must be an integer, inclusive |  |
| max |  | The maximum value, must be an integer, exclusive |  |  

💡 Example: 
```
---
identifier: "io.duzzy.plugin.provider.random.IntegerRandomProvider"
min: 0
max: 100
```

### io.duzzy.plugin.provider.random.LocalDateRandomProvider ♨️ 🧬  
🔑 Identifier: io.duzzy.plugin.provider.random.LocalDateRandomProvider  
📋 Description: Provide a random local date value  
📦 Module: io.duzzy.core  
🧬 Native support: true  

⚙️ Parameters: 

| Name | Aliases | Description | Default value |
| --- | --- | --- | --- |
| min |  | The minimum local date, inclusive | 1970-01-01 |
| max |  | The maximum local date, exclusive | 9999-12-31 |  

💡 Example: 
```
---
identifier: "io.duzzy.plugin.provider.random.LocalDateRandomProvider"
min: "2020-01-01"
max: "2021-01-01"
```

### io.duzzy.plugin.provider.random.LocalDateTimeRandomProvider ♨️ 🧬  
🔑 Identifier: io.duzzy.plugin.provider.random.LocalDateTimeRandomProvider  
📋 Description: Provide a random local date time value  
📦 Module: io.duzzy.core  
🧬 Native support: true  

⚙️ Parameters: 

| Name | Aliases | Description | Default value |
| --- | --- | --- | --- |
| min |  | The minimum local date time, inclusive | 1970-01-01T00:00 |
| max |  | The maximum local date time, exclusive | 2100-01-01T00:00 |  

💡 Example: 
```
---
identifier: "io.duzzy.plugin.provider.random.LocalDateTimeRandomProvider"
min: "2020-01-01T00:00:00"
max: "2021-01-01T00:00:00"
```

### io.duzzy.plugin.provider.random.LocalTimeRandomProvider ♨️ 🧬  
🔑 Identifier: io.duzzy.plugin.provider.random.LocalTimeRandomProvider  
📋 Description: Provide a random local time value  
📦 Module: io.duzzy.core  
🧬 Native support: true  

⚙️ Parameters: 

| Name | Aliases | Description | Default value |
| --- | --- | --- | --- |
| min |  | The minimum local time, inclusive | 0 |
| max |  | The maximum local time, exclusive | 23:59:59 |  

💡 Example: 
```
---
identifier: "io.duzzy.plugin.provider.random.LocalTimeRandomProvider"
min: "10:00:00"
max: "11:00:00"
```

### io.duzzy.plugin.provider.random.LongRandomProvider ♨️ 🧬  
🔑 Identifier: io.duzzy.plugin.provider.random.LongRandomProvider  
📋 Description: Provide a random long value  
📦 Module: io.duzzy.core  
🧬 Native support: true  

⚙️ Parameters: 

| Name | Aliases | Description | Default value |
| --- | --- | --- | --- |
| min |  | The minimum value, must be a long, inclusive |  |
| max |  | The maximum value, must be a long, exclusive |  |  

💡 Example: 
```
---
identifier: "io.duzzy.plugin.provider.random.LongRandomProvider"
min: 0
max: 100
```

### io.duzzy.plugin.provider.random.ShortRandomProvider ♨️ 🧬  
🔑 Identifier: io.duzzy.plugin.provider.random.ShortRandomProvider  
📋 Description: Provide a random short value  
📦 Module: io.duzzy.core  
🧬 Native support: true  

⚙️ Parameters: 

| Name | Aliases | Description | Default value |
| --- | --- | --- | --- |
| min |  | The minimum value, must be a short, inclusive | -32768 |
| max |  | The maximum value, must be a short, exclusive | 32767 |  

💡 Example: 
```
---
identifier: "io.duzzy.plugin.provider.random.ShortRandomProvider"
min: 0
max: 100
```

### io.duzzy.plugin.provider.random.SqlDateRandomProvider ♨️ 🧬  
🔑 Identifier: io.duzzy.plugin.provider.random.SqlDateRandomProvider  
📋 Description: Provide a random java.sql.Date value  
📦 Module: io.duzzy.core  
🧬 Native support: true  

⚙️ Parameters: 

| Name | Aliases | Description | Default value |
| --- | --- | --- | --- |
| min |  | The minimum date, inclusive | 1970-01-01 |
| max |  | The maximum date, exclusive | 2100-12-31 |  

💡 Example: 
```
---
identifier: "io.duzzy.plugin.provider.random.SqlDateRandomProvider"
min: "2020-01-01"
max: "2021-01-01"
```

### io.duzzy.plugin.provider.random.SqlTimeRandomProvider ♨️ 🧬  
🔑 Identifier: io.duzzy.plugin.provider.random.SqlTimeRandomProvider  
📋 Description: Provide a random java.sql.Time value  
📦 Module: io.duzzy.core  
🧬 Native support: true  

⚙️ Parameters: 

| Name | Aliases | Description | Default value |
| --- | --- | --- | --- |
| min |  | The minimum time, inclusive | 00:00:00 |
| max |  | The maximum time, exclusive | 23:59:59 |  

💡 Example: 
```
---
identifier: "io.duzzy.plugin.provider.random.SqlTimeRandomProvider"
min: "10:00:00"
max: "11:00:00"
```

### io.duzzy.plugin.provider.random.UuidRandomProvider ♨️ 🧬  
🔑 Identifier: io.duzzy.plugin.provider.random.UuidRandomProvider  
📋 Description: Provide a random UUID value  
📦 Module: io.duzzy.core  
🧬 Native support: true  

💡 Example: 
```
---
identifier: "io.duzzy.plugin.provider.random.UuidRandomProvider"
```

## Sink
A sink is a component that enables to specify where and in which format (via a serializer) data are written.

Before writing data, a sink delegates data formatting to a serializer.

### io.duzzy.plugin.sink.ConsoleSink ♨️ 🧬  
🔑 Identifier: io.duzzy.plugin.sink.ConsoleSink  
📋 Description: Print output into the console  
📦 Module: io.duzzy.core  
🧬 Native support: true  

⚙️ Parameters: 

| Name | Aliases | Description | Default value |
| --- | --- | --- | --- |
| serializer |  | The serializer to use |  |  

💡 Example: 
```
---
identifier: "io.duzzy.plugin.sink.ConsoleSink"
serializer:
  identifier: "io.duzzy.plugin.serializer.JsonSerializer"
```

### io.duzzy.plugin.sink.GoogleCloudStorageSink ♨️ 🧬  
🔑 Identifier: io.duzzy.plugin.sink.GoogleCloudStorageSink  
📋 Description: Sink data to Google Cloud Storage (GCS)  
📦 Module: io.duzzy.plugin-gcp  
🧬 Native support: true  

⚙️ Parameters: 

| Name | Aliases | Description | Default value |
| --- | --- | --- | --- |
| serializer |  | The serializer to use |  |
| project_id | projectId, project-id | The GCP project ID |  |
| credentials_file | credentialsFile, credentials-file | Path to the GCP credentials file |  |
| bucket_name | bucketName, bucket-name | The GCS bucket name |  |
| object_name | objectName, object-name | The GCS object name |  |  

💡 Example: 
```
---
sink:
  identifier: "io.duzzy.plugin.sink.GoogleCloudStorageSink"
  project_id: "my-project-id"
  credentials_file: "/path/to/credentials.json"
  bucket_name: "my-bucket"
  object_name: "data/output.json"
  serializer:
    identifier: "io.duzzy.plugin.serializer.JsonSerializer"
```

### io.duzzy.plugin.sink.GooglePubsubSink ♨️ 🧬  
🔑 Identifier: io.duzzy.plugin.sink.GooglePubsubSink  
📋 Description: Sink data to Google Cloud Pub/Sub  
📦 Module: io.duzzy.plugin-gcp  
🧬 Native support: true  

⚙️ Parameters: 

| Name | Aliases | Description | Default value |
| --- | --- | --- | --- |
| serializer |  | The serializer to use |  |
| project_id | projectId, project-id | The GCP project ID |  |
| topic_name | topicName, topic-name | The Pub/Sub topic name |  |  

💡 Example: 
```
---
sink:
  identifier: "io.duzzy.plugin.sink.GooglePubsubSink"
  project_id: "my-project-id"
  topic_name: "my-topic"
  serializer:
    identifier: "io.duzzy.plugin.serializer.JsonSerializer"
```

### io.duzzy.plugin.sink.KafkaSink ♨️ 🧬  
🔑 Identifier: io.duzzy.plugin.sink.KafkaSink  
📋 Description: Sink data to a Kafka topic  
📦 Module: io.duzzy.plugin-kafka  
🧬 Native support: true  

⚙️ Parameters: 

| Name | Aliases | Description | Default value |
| --- | --- | --- | --- |
| serializer |  | The serializer to use |  |
| topic |  | The Kafka topic |  |
| bootstrap_servers | bootstrapServers, bootstrap-servers | The Kafka bootstrap servers |  |  

💡 Example: 
```
---
sink:
  identifier: "io.duzzy.plugin.sink.KafkaSink"
  serializer:
    identifier: "io.duzzy.plugin.serializer.JsonSerializer"
  topic: "my-topic"
  bootstrapServers: "localhost:9092"
```

### io.duzzy.plugin.sink.LocalFileSink ♨️ 🧬  
🔑 Identifier: io.duzzy.plugin.sink.LocalFileSink  
📋 Description: Write output into a local file  
📦 Module: io.duzzy.core  
🧬 Native support: true  

⚙️ Parameters: 

| Name | Aliases | Description | Default value |
| --- | --- | --- | --- |
| serializer |  | The serializer to use |  |
| filename |  | The name of the file to write |  |
| create_if_not_exists | createIfNotExists, create-if-not-exists | Create the file if it does not exist | false |  

💡 Example: 
```
---
identifier: "io.duzzy.plugin.sink.LocalFileSink"
filename: "output.csv"
create_if_not_exists: true
serializer:
  identifier: "io.duzzy.plugin.serializer.JsonSerializer"
```

### io.duzzy.plugin.sink.MysqlSink ♨️ 🧬  
🔑 Identifier: io.duzzy.plugin.sink.MysqlSink  
📋 Description: Sink data to a MySQL database  
📦 Module: io.duzzy.plugin-mysql  
🧬 Native support: true  

⚙️ Parameters: 

| Name | Aliases | Description | Default value |
| --- | --- | --- | --- |
| serializer |  | The serializer to use |  |
| url |  | The JDBC URL |  |
| user |  | The user |  |
| password |  | The password |  |
| fail_on_error | failOnError, fail-on-error | Whether to fail on error |  |  

💡 Example: 
```
---
sink:
  identifier: "io.duzzy.plugin.sink.MysqlSink"
  serializer:
    identifier: "io.duzzy.plugin.serializer.SqlSerializer"
    table_name: "my_table"
  url: "jdbc:mysql://localhost:3306/my_database"
  user: "user"
  password: "password"
  fail_on_error: true
```

### io.duzzy.plugin.sink.PostgresqlSink ♨️ 🧬  
🔑 Identifier: io.duzzy.plugin.sink.PostgresqlSink  
📋 Description: Sink data to a PostgreSQL database  
📦 Module: io.duzzy.plugin-postgresql  
🧬 Native support: true  

⚙️ Parameters: 

| Name | Aliases | Description | Default value |
| --- | --- | --- | --- |
| serializer |  | The serializer to use |  |
| url |  | The JDBC URL |  |
| user |  | The user |  |
| password |  | The password |  |
| fail_on_error | failOnError, fail-on-error | Whether to fail on error |  |  

💡 Example: 
```
---
sink:
  identifier: "io.duzzy.plugin.sink.PostgresqlSink"
  serializer:
    identifier: "io.duzzy.plugin.serializer.SqlSerializer"
    table_name: "my_table"
  url: "jdbc:postgresql://localhost:5432/my_database"
  user: "user"
  password: "password"
  fail_on_error: true
```

## Serializer
A serializer is a component that enables to specify how data are formatted.

### io.duzzy.plugin.serializer.ArrowSerializer ♨️ 🧬  
🔑 Identifier: io.duzzy.plugin.serializer.ArrowSerializer  
📋 Description: Serialize data to Apache Arrow format  
📦 Module: io.duzzy.plugin-arrow  
🧬 Native support: true  

⚙️ Parameters: 

| Name | Aliases | Description | Default value |
| --- | --- | --- | --- |
| name |  | The name of the record |  |
| namespace |  | The namespace that qualifies the name |  |
| schema_file | schemaFile, schema-file | The Avro schema file |  |
| batch_size | batchSize, batch-size | The size of each batch written to the output stream |  |  

💡 Example: 
```
---
sink:
  identifier: "io.duzzy.plugin.sink.ConsoleSink"
  serializer:
    identifier: "io.duzzy.plugin.serializer.ArrowSerializer"
    name: "arrow_name"
    namespace: "arrow_namespace"
    schema_file: "/path/to/schema.avsc"
    batch_size: 1000
```

### io.duzzy.plugin.serializer.AvroSchemalessSerializer ♨️ 🧬  
🔑 Identifier: io.duzzy.plugin.serializer.AvroSchemalessSerializer  
📋 Description: Serialize data to Avro, schema is not written with data  
📦 Module: io.duzzy.plugin-avro  
🧬 Native support: true  

⚙️ Parameters: 

| Name | Aliases | Description | Default value |
| --- | --- | --- | --- |
| name |  | The name of the record |  |
| namespace |  | The namespace that qualifies the name |  |
| schema_file | schemaFile, schema-file | The Avro schema file |  |  

💡 Example: 
```
---
sink:
  identifier: "io.duzzy.plugin.sink.ConsoleSink"
  serializer:
    identifier: "io.duzzy.plugin.serializer.AvroSchemalessSerializer"
    name: "avro_name"
    namespace: "avro_namespace"
```

### io.duzzy.plugin.serializer.AvroWithSchemaSerializer ♨️ 🧬  
🔑 Identifier: io.duzzy.plugin.serializer.AvroWithSchemaSerializer  
📋 Description: Serialize data to Avro, schema is written with data  
📦 Module: io.duzzy.plugin-avro  
🧬 Native support: true  

⚙️ Parameters: 

| Name | Aliases | Description | Default value |
| --- | --- | --- | --- |
| name |  | The name of the record |  |
| namespace |  | The namespace that qualifies the name |  |
| schema_file | schemaFile, schema-file | The Avro schema file |  |  

💡 Example: 
```
---
sink:
  identifier: "io.duzzy.plugin.sink.ConsoleSink"
  serializer:
    identifier: "io.duzzy.plugin.serializer.AvroWithSchemaSerializer"
    name: "avro_name"
    namespace: "avro_namespace"
```

### io.duzzy.plugin.serializer.CsvSerializer ♨️ 🧬  
🔑 Identifier: io.duzzy.plugin.serializer.CsvSerializer  
📋 Description: Serialize data in CSV  
📦 Module: io.duzzy.core  
🧬 Native support: true  

⚙️ Parameters: 

| Name | Aliases | Description | Default value |
| --- | --- | --- | --- |
| quote_char | quoteChar, quote-char | The character used to quote values | ' |
| column_separator | columnSeparator, column-separator | The character used to separate columns | ; |
| line_separator | lineSeparator, line-separator | The character used to separate lines | | |  

💡 Example: 
```
---
sink:
  identifier: "io.duzzy.plugin.sink.ConsoleSink"
  serializer:
    identifier: "io.duzzy.plugin.serializer.CsvSerializer"
    columnSeparator: ";"
    lineSeparator: "|"
    quoteChar: "'"
```

### io.duzzy.plugin.serializer.JsonSerializer ♨️ 🧬  
🔑 Identifier: io.duzzy.plugin.serializer.JsonSerializer  
📋 Description: Serialize data in JSON  
📦 Module: io.duzzy.core  
🧬 Native support: true  

💡 Example: 
```
---
sink:
  identifier: "io.duzzy.plugin.sink.ConsoleSink"
  serializer:
    identifier: "io.duzzy.plugin.serializer.JsonSerializer"
```

### io.duzzy.plugin.serializer.ParquetSerializer ♨️ 🧬  
🔑 Identifier: io.duzzy.plugin.serializer.ParquetSerializer  
📋 Description: Serialize data to Parquet  
📦 Module: io.duzzy.plugin-parquet  
🧬 Native support: true  

⚙️ Parameters: 

| Name | Aliases | Description | Default value |
| --- | --- | --- | --- |
| name |  | The name of the record |  |
| namespace |  | The namespace that qualifies the name |  |
| schema_file | schemaFile, schema-file | The Avro schema file |  |  

💡 Example: 
```
---
sink:
  identifier: "io.duzzy.plugin.sink.ConsoleSink"
  serializer:
    identifier: "io.duzzy.plugin.serializer.ParquetSerializer"
    name: "parquet"
    namespace: "io.duzzy.plugin.serializer"
    schema_file: "schema.avsc"
```

### io.duzzy.plugin.serializer.SqlSerializer ♨️ 🧬  
🔑 Identifier: io.duzzy.plugin.serializer.SqlSerializer  
📋 Description: Serialize data in SQL  
📦 Module: io.duzzy.core  
🧬 Native support: true  

⚙️ Parameters: 

| Name | Aliases | Description | Default value |
| --- | --- | --- | --- |
| table_name | tableName, table-name | The name of the table to insert data |  |  

💡 Example: 
```
---
sink:
  identifier: "io.duzzy.plugin.sink.ConsoleSink"
  serializer:
    identifier: "io.duzzy.plugin.serializer.SqlSerializer"
    table_name: "my_table"
```

### io.duzzy.plugin.serializer.XmlSerializer ♨️ 🧬  
🔑 Identifier: io.duzzy.plugin.serializer.XmlSerializer  
📋 Description: Serialize data in XML  
📦 Module: io.duzzy.core  
🧬 Native support: true  

⚙️ Parameters: 

| Name | Aliases | Description | Default value |
| --- | --- | --- | --- |
| root_tag | rootTag, root-tag | The root tag of the XML document | rows |
| row_tag | rowTag, row-tag | The tag of each row | row |  

💡 Example: 
```
---
sink:
  identifier: "io.duzzy.plugin.sink.ConsoleSink"
  serializer:
    identifier: "io.duzzy.plugin.serializer.XmlSerializer"
    root_tag: "rows"
    row_tag: "row"
```
